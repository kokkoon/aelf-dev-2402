"use strict";(self.webpackChunkaelf_dev_2402=self.webpackChunkaelf_dev_2402||[]).push([[1987],{8290:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>i});var o=n(4848),r=n(8453);const s={sidebar_position:3},c="Unit test your contract",a={id:"smart-contract/3.3 Unit-Test-Your-Contract",title:"Unit test your contract",description:"The code in this example can be cloned from//github.com/gldeng/aelf-nus-workshop-2024-example-code/tree/main/contract.",source:"@site/docs/3. smart-contract/3.3 Unit-Test-Your-Contract.md",sourceDirName:"3. smart-contract",slug:"/smart-contract/3.3 Unit-Test-Your-Contract",permalink:"/aelf-dev-2402/docs/smart-contract/3.3 Unit-Test-Your-Contract",draft:!1,unlisted:!1,editUrl:"https://github.com/kokkoon/aelf-dev-2402/tree/main/docs/3. smart-contract/3.3 Unit-Test-Your-Contract.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Code your contract",permalink:"/aelf-dev-2402/docs/smart-contract/3.2 Code-Your-Contract"},next:{title:"Deploy your contract to testnet",permalink:"/aelf-dev-2402/docs/smart-contract/3.4 Deploy-Your-Contract"}},l={},i=[{value:"1. Edit files",id:"1-edit-files",level:2},{value:"1.1. Edit file <code>test/HelloWorldTests.cs</code> and copy/paste the following:",id:"11-edit-file-testhelloworldtestscs-and-copypaste-the-following",level:3},{value:"2. Copy files",id:"2-copy-files",level:2},{value:"3. Run the unit test",id:"3-run-the-unit-test",level:2}];function d(t){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"unit-test-your-contract",children:"Unit test your contract"}),"\n",(0,o.jsx)(e.admonition,{type:"tip",children:(0,o.jsxs)(e.p,{children:["The code in this example can be cloned from: ",(0,o.jsx)(e.a,{href:"https://github.com/gldeng/aelf-nus-workshop-2024-example-code/tree/main/contract",children:"https://github.com/gldeng/aelf-nus-workshop-2024-example-code/tree/main/contract"}),"."]})}),"\n",(0,o.jsx)(e.h2,{id:"1-edit-files",children:"1. Edit files"}),"\n",(0,o.jsxs)(e.h3,{id:"11-edit-file-testhelloworldtestscs-and-copypaste-the-following",children:["1.1. Edit file ",(0,o.jsx)(e.code,{children:"test/HelloWorldTests.cs"})," and copy/paste the following:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-csharp",metastring:'title="test/HelloWorldTests.cs" showLineNumbers',children:"using System.Threading.Tasks;\nusing Google.Protobuf.WellKnownTypes;\nusing Shouldly;\nusing Xunit;\n// highlight-start\nusing System;\nusing AElf.Sdk.CSharp;\n// highlight-end\n\n// highlight-start\nnamespace AElf.Contracts.HelloWorld\n{\n    // This class is unit test class, and it inherit TestBase. Write your unit test code inside it.\n    public class HelloWorldTests : TestBase\n    {\n        [Fact]\n        public async Task Rng_Test()\n        {\n            await HelloWorldStub.Initialize.SendAsync(new Empty());\n            var result = await HelloWorldStub.CreateCharacter.SendAsync(new Empty());\n            var character = await HelloWorldStub.GetMyCharacter.CallAsync(Accounts[0].Address);\n\n            Assert.NotEqual(new Character(), character);\n            Assert.Equal(result.Output, character);\n        }\n    }\n\n}\n// highlight-end\n"})}),"\n",(0,o.jsx)(e.h2,{id:"2-copy-files",children:"2. Copy files"}),"\n",(0,o.jsx)(e.p,{children:"Copy the following files:"}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"From"}),(0,o.jsx)(e.th,{children:"To"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"src/Protobuf/contract/hello_world_contract.proto"}),(0,o.jsx)(e.td,{children:"test/Protobuf/stub/hello_world_contract.proto"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"src/Protobuf/base/acs1.proto"}),(0,o.jsx)(e.td,{children:"test/Protobuf/base/acs1.proto"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"src/Protobuf/reference/acs6.proto"}),(0,o.jsx)(e.td,{children:"test/Protobuf/stub/acs6.proto"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"src/Protobuf/reference/acs12.proto"}),(0,o.jsx)(e.td,{children:"test/Protobuf/reference/acs12.proto"})]})]})]}),"\n",(0,o.jsx)(e.p,{children:"For your convenience, run these commands:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"mkdir test/Protobuf/base\nmkdir test/Protobuf/reference\ncp src/Protobuf/contract/hello_world_contract.proto test/Protobuf/stub/hello_world_contract.proto\ncp src/Protobuf/contract/base/acs1.proto test/Protobuf/base/acs1.proto\ncp src/Protobuf/reference/acs6.proto test/Protobuf/stub/acs6.proto\ncp src/Protobuf/reference/acs12.proto test/Protobuf/reference/acs12.proto\n"})}),"\n",(0,o.jsx)(e.h2,{id:"3-run-the-unit-test",children:"3. Run the unit test"}),"\n",(0,o.jsx)(e.p,{children:"At the Terminal, run the following commands:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"cd test\ndotnet test\n"})})]})}function h(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>c,x:()=>a});var o=n(6540);const r={},s=o.createContext(r);function c(t){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:c(t.components),o.createElement(s.Provider,{value:e},t.children)}}}]);